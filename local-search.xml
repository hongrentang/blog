<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>常用的正则表达式</title>
    <link href="/2024/07/29/%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <url>/2024/07/29/%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<p>1.匹配中文字符的正则表达式：<code>[\u4e00-\u9fa5]</code></p><p>评注：匹配中文还真是个头疼的事，有了这个表达式就好办了</p><p>2.匹配双字节字符(包括汉字在内)：<code>[^\x00-\xff]</code></p><p>评注：可以用来计算字符串的长度（一个双字节字符长度计2，ASCII字符计1）</p><p>3.匹配空白行的正则表达式：<code>\n\s*\r</code></p><p>评注：可以用来删除空白行</p><p>4.匹配 HTML 标记的正则表达式：<code>&lt;(\S*?)[^&gt;]*&gt;.*?&lt;/\1&gt;|&lt;.*? /&gt;</code></p><p>评注：网上流传的版本太糟糕，上面这个也仅仅能匹配部分，对于复杂的嵌套标记依旧无能为力</p><p>5.匹配首尾空白字符的正则表达式：<code>^\s*|\s*$</code></p><p>评注：可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式</p><p>6.匹配Email地址的正则表达式：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">\w+<span class="hljs-comment">([-+.]\w+)</span>*@\w+<span class="hljs-comment">([-.]\w+)</span>*\.\w+<span class="hljs-comment">([-.]\w+)</span>*<br></code></pre></td></tr></table></figure><p>评注：表单验证时很实用</p><p>7.匹配网址URL的正则表达式：<code>[a-zA-z]+://[^\s]*</code></p><p>评注：网上流传的版本功能很有限，上面这个基本可以满足需求</p><p>8.匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：<code>^[a-zA-Z][a-zA-Z0-9_]&#123;4,15&#125;$</code></p><p>评注：表单验证时很实用</p><p>9.匹配国内电话号码：<code>\d&#123;3&#125;-\d&#123;8&#125;|\d&#123;4&#125;-\d&#123;7&#125;</code></p><p>评注：匹配形式如 0511-4405222 或 021-87888822</p><p>10.匹配腾讯QQ号：<code>[1-9][0-9]&#123;4,&#125;</code></p><p>评注：腾讯QQ号从10000开始</p><p>11.匹配中国邮政编码：<code>[1-9]\d&#123;5&#125;(?!\d)</code></p><p>评注：中国邮政编码为6位数字</p><p>12.匹配×××：<code>\d&#123;15&#125;|\d&#123;18&#125;</code></p><p>评注：中国的×××为15位或18位</p><p>13.匹配ip地址：<code>\d+\.\d+\.\d+\.\d+</code></p><p>评注：提取 IP 地址时有用</p><p>14.匹配特定数字：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs gams">^[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]\d*<span class="hljs-symbol">$</span>   <span class="hljs-comment">//匹配正整数</span><br>^-[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]\d*<span class="hljs-symbol">$</span>  <span class="hljs-comment">//匹配负整数</span><br>^-?[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]\d*<span class="hljs-symbol">$</span>  <span class="hljs-comment">//匹配整数</span><br>^[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]\d*|<span class="hljs-number">0</span><span class="hljs-symbol">$</span> <span class="hljs-comment">//匹配非负整数（正整数 + 0）</span><br>^-[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]\d*|<span class="hljs-number">0</span><span class="hljs-symbol">$</span>  <span class="hljs-comment">//匹配非正整数（负整数 + 0）</span><br>^[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]\d*\.\d*|<span class="hljs-number">0</span>\.\d*[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]\d*<span class="hljs-symbol">$</span>  <span class="hljs-comment">//匹配正浮点数</span><br>^-([<span class="hljs-number">1</span><span class="hljs-number">-9</span>]\d*\.\d*|<span class="hljs-number">0</span>\.\d*[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]\d*)<span class="hljs-symbol">$</span> <span class="hljs-comment">//匹配负浮点数</span><br>^-?([<span class="hljs-number">1</span><span class="hljs-number">-9</span>]\d*\.\d*|<span class="hljs-number">0</span>\.\d*[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]\d*|<span class="hljs-number">0</span>?\<span class="hljs-number">.0</span>+|<span class="hljs-number">0</span>)<span class="hljs-symbol">$</span> <span class="hljs-comment">//匹配浮点数</span><br>^[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]\d*\.\d*|<span class="hljs-number">0</span>\.\d*[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]\d*|<span class="hljs-number">0</span>?\<span class="hljs-number">.0</span>+|<span class="hljs-number">0</span><span class="hljs-symbol">$</span>  <span class="hljs-comment">//匹配非负浮点数（正浮点数 + 0）</span><br>^(-([<span class="hljs-number">1</span><span class="hljs-number">-9</span>]\d*\.\d*|<span class="hljs-number">0</span>\.\d*[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]\d*))|<span class="hljs-number">0</span>?\<span class="hljs-number">.0</span>+|<span class="hljs-number">0</span><span class="hljs-symbol">$</span> <span class="hljs-comment">//匹配非正浮点数（负浮点数 + 0）</span><br></code></pre></td></tr></table></figure><p>评注：处理大量数据时有用，具体应用时注意修正</p><p>15.匹配特定字符串：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gams">^[A-Za-z]+<span class="hljs-symbol">$</span> <span class="hljs-comment">//匹配由26个英文字母组成的字符串</span><br>^[A-Z]+<span class="hljs-symbol">$</span> <span class="hljs-comment">//匹配由26个英文字母的大写组成的字符串</span><br>^[a-z]+<span class="hljs-symbol">$</span> <span class="hljs-comment">//匹配由26个英文字母的小写组成的字符串</span><br>^[A-Za-z0<span class="hljs-number">-9</span>]+<span class="hljs-symbol">$</span> <span class="hljs-comment">//匹配由数字和26个英文字母组成的字符串</span><br>^\w+<span class="hljs-symbol">$</span> <span class="hljs-comment">//匹配由数字、26个英文字母或者下划线组成的字符串</span><br></code></pre></td></tr></table></figure><p>评注：最基本也是最常用的一些表达式</p>]]></content>
    
    
    
    <tags>
      
      <tag>正则</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux运维必备的40个命令总结</title>
    <link href="/2024/07/29/linux%E8%BF%90%E7%BB%B4%E5%BF%85%E5%A4%87%E7%9A%8440%E4%B8%AA%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/"/>
    <url>/2024/07/29/linux%E8%BF%90%E7%BB%B4%E5%BF%85%E5%A4%87%E7%9A%8440%E4%B8%AA%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<ol><li><p>删除0字节文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">find -<span class="hljs-built_in">type</span> f -size 0 -<span class="hljs-built_in">exec</span> <span class="hljs-built_in">rm</span> -rf &#123;&#125; \;<br></code></pre></td></tr></table></figure></li><li><p>查看进程按内存从大到小排列</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">PS -e -o <span class="hljs-string">&quot;%C : %p : %z : %a&quot;</span>|<span class="hljs-built_in">sort</span> -k5 -nr<br></code></pre></td></tr></table></figure></li><li><p>按 CPU 利用率从大到小排列</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps -e -o <span class="hljs-string">&quot;%C : %p : %z : %a&quot;</span>|<span class="hljs-built_in">sort</span> -nr<br></code></pre></td></tr></table></figure></li><li><p>打印 cache 里的URL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">grep -r -a jpg /data/cache/* | strings | grep <span class="hljs-string">&quot;http:&quot;</span> | awk -F<span class="hljs-string">&#x27;http:&#x27;</span> <span class="hljs-string">&#x27;&#123;print &quot;http:&quot;$2;&#125;&#x27;</span><br><br><br></code></pre></td></tr></table></figure></li><li><p>查看 http 的并发请求数及其 TCP 连接状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">netstat -n | awk <span class="hljs-string">&#x27;/^tcp/ &#123;++S[$NF]&#125; END &#123;for(a in S) print a, S[a]&#125;&#x27;</span><br></code></pre></td></tr></table></figure></li><li><p>sed 在这个文里 Root 的一行，匹配 Root 一行，将 no 替换成 yes</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed -i <span class="hljs-string">&#x27;/Root/s/no/yes/&#x27;</span> /etc/ssh/sshd_config <br></code></pre></td></tr></table></figure></li><li><p>如何杀掉 MySQL 进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps aux |grep mysql |grep -v grep  |awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span> |xargs <span class="hljs-built_in">kill</span> -9 <br>(从中了解到awk的用途)<br><br>killall -TERM mysqld<br><br><span class="hljs-built_in">kill</span> -9 `<span class="hljs-built_in">cat</span> /usr/local/apache2/logs/httpd.pid`   <span class="hljs-comment">#试试查杀进程PID</span><br></code></pre></td></tr></table></figure></li><li><p>显示运行 3 级别开启的服务:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> /etc/rc3.d/S* |<span class="hljs-built_in">cut</span> -c 15-   (从中了解到<span class="hljs-built_in">cut</span>的用途，截取数据)<br></code></pre></td></tr></table></figure></li><li><p>如何在编写 SHELL 显示多个信息，用 EOF</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string">+--------------------------------------------------------------+</span><br><span class="hljs-string">|       === Welcome to Tunoff services ===                  |</span><br><span class="hljs-string">+--------------------------------------------------------------+</span><br><span class="hljs-string">EOF</span><br></code></pre></td></tr></table></figure></li><li><p>for 的巧用（如给 MySQL 建软链接）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/local/mysql/bin<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> *<br><span class="hljs-keyword">do</span> <span class="hljs-built_in">ln</span> /usr/local/mysql/bin/<span class="hljs-variable">$i</span> /usr/bin/<span class="hljs-variable">$i</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure></li><li><p>取 IP 地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">ifconfig eth0 |grep <span class="hljs-string">&quot;inet addr:&quot;</span> |awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>| <span class="hljs-built_in">cut</span> -c 6-  <br>或者：<br>ifconfig | grep <span class="hljs-string">&#x27;inet addr:&#x27;</span>| grep -v <span class="hljs-string">&#x27;127.0.0.1&#x27;</span> | <span class="hljs-built_in">cut</span> -d: -f2 | awk <span class="hljs-string">&#x27;&#123; print $1&#125;&#x27;</span><br><br></code></pre></td></tr></table></figure></li><li><p>内存的大小：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">free -m |grep <span class="hljs-string">&quot;Mem&quot;</span> | awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span><br></code></pre></td></tr></table></figure></li><li><p>查看ESTABLISHED 的链接数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">netstat -an -t | grep <span class="hljs-string">&quot;:80&quot;</span> | grep ESTABLISHED | awk <span class="hljs-string">&#x27;&#123;printf &quot;%s %s\n&quot;,$5,$6&#125;&#x27;</span> | <span class="hljs-built_in">sort</span><br><br></code></pre></td></tr></table></figure></li><li><p>查看 Apache 的并发请求数及其 TCP 连接状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">netstat -n | awk <span class="hljs-string">&#x27;/^tcp/ &#123;++S[$NF]&#125; END &#123;for(a in S) print a, S[a]&#125;&#x27;</span><br></code></pre></td></tr></table></figure></li><li><p>因为同事要统计一下服务器下面所有的 jpg 的文件的大小，写了个 SHELL 给他来统计。原来用 xargs 实现，但他一次处理一部分。搞的有多个总和……，下面的命令就能解决。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">find / -name *.jpg -<span class="hljs-built_in">exec</span> <span class="hljs-built_in">wc</span> -c &#123;&#125; \;|awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>|awk <span class="hljs-string">&#x27;&#123;a+=$1&#125;END&#123;print a&#125;&#x27;</span><br><br></code></pre></td></tr></table></figure></li></ol><p>CPU 的数量（多核算多个CPU，cat &#x2F;proc&#x2F;cpuinfo |grep -c processor）越多，系统负载越低，每秒能处理的请求数也越多。</p><ol start="16"><li><p>CPU负载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /proc/loadavg<br>检查前三个输出值是否超过了系统逻辑 CPU 的4倍。<br></code></pre></td></tr></table></figure></li><li><p>CPU负载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">mpstat 1 1<br>检查 %idle 是否过低（比如小于5%）<br></code></pre></td></tr></table></figure></li><li><p>内存空间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">free<br>检查 free 值是否过低，也可以用 <span class="hljs-comment"># cat /proc/meminfo</span><br></code></pre></td></tr></table></figure></li><li><p>SWAP空间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">free<br>检查 swap used 值是否过高，如果 swap used 值过高，进一步检查 swap 动作是否频繁：<br>vmstat 1 5<br>观察 si 和 so 值是否较大<br></code></pre></td></tr></table></figure></li><li><p>磁盘空间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">df</span> -h<br>检查是否有分区使用率（Use%）过高（比如超过90%）如发现某个分区空间接近用尽，可以进入该分区的挂载点，用以下命令找出占用空间最多的文件或目录：<br><span class="hljs-built_in">du</span> -cks * | <span class="hljs-built_in">sort</span> -rn | <span class="hljs-built_in">head</span> -n 10<br></code></pre></td></tr></table></figure></li><li><p>磁盘 I&#x2F;O 负载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">iostat -x 1 2<br>检查I/O使用率（%util）是否超过 100%<br></code></pre></td></tr></table></figure></li><li><p>网络负载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sar -n DEV<br>检查网络流量（rxbyt/s, txbyt/s）是否过高<br></code></pre></td></tr></table></figure></li><li><p>网络错误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">netstat -i<br>检查是否有网络错误（drop fifo colls carrier），也可以用命令：# <span class="hljs-built_in">cat</span> /proc/net/dev<br></code></pre></td></tr></table></figure></li><li><p>网络连接数目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">netstat -an | grep -E <span class="hljs-string">&quot;^(tcp)&quot;</span> | <span class="hljs-built_in">cut</span> -c 68- | <span class="hljs-built_in">sort</span> | <span class="hljs-built_in">uniq</span> -c | <span class="hljs-built_in">sort</span> -n<br></code></pre></td></tr></table></figure></li><li><p>进程总数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps aux | <span class="hljs-built_in">wc</span> -l<br></code></pre></td></tr></table></figure></li><li><p>可运行进程数目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">vmstat 1 5<br>列给出的是可运行进程的数目，检查其是否超过系统逻辑 CPU 的 4 倍<br></code></pre></td></tr></table></figure></li><li><p>进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">top -<span class="hljs-built_in">id</span> 1<br>观察是否有异常进程出现<br></code></pre></td></tr></table></figure></li><li><p>网络状态，检查DNS，网关等是否可以正常连通</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">ping <br>traceroute<br>nslookup<br>dig <br></code></pre></td></tr></table></figure></li><li><p>用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">who</span> | <span class="hljs-built_in">wc</span> -l<br>检查登录用户是否过多 (比如超过50个)   也可以用命令：# <span class="hljs-built_in">uptime</span>。<br></code></pre></td></tr></table></figure></li><li><p>系统日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># cat /var/log/rflogview/*errors</span><br>检查是否有异常错误记录   也可以搜寻一些异常关键字，例如：<br><br>grep -i error /var/log/messages<br>grep -i fail /var/log/messages<br></code></pre></td></tr></table></figure></li><li><p>核心日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">dmesg<br>检查是否有异常错误记录。<br></code></pre></td></tr></table></figure></li><li><p>系统时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">date</span><br>检查系统时间是否正确。<br></code></pre></td></tr></table></figure></li><li><p>打开文件数目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsof -w | <span class="hljs-built_in">wc</span> -l<br>检查打开文件总数是否过多。<br></code></pre></td></tr></table></figure></li><li><p>日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># logwatch –print</span><br>配置 /etc/log.d/logwatch.conf，将 Mailto 设置为自己的 email 地址，启动 mail 服务(sendmail或者postfix)，这样就可以每天收到日志报告了。<br>缺省 logwatch 只报告昨天的日志，可以用 <span class="hljs-comment"># logwatch –print –range all 获得所有的日志分析结果。</span><br>可以用 <span class="hljs-comment"># logwatch –print –detail high 获得更具体的日志分析结果(而不仅仅是出错日志)。</span><br></code></pre></td></tr></table></figure></li><li><p>杀掉80端口相关的进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsof -i :80|grep -v “ID”|awk ‘&#123;<span class="hljs-built_in">print</span> “<span class="hljs-built_in">kill</span> -9”,<span class="hljs-variable">$2</span>&#125;’|sh<br></code></pre></td></tr></table></figure></li><li><p>清除僵死进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps -eal | awk <span class="hljs-string">&#x27;&#123; if ($2 == &quot;Z&quot;) &#123;print $4&#125;&#125;&#x27;</span> | <span class="hljs-built_in">kill</span> -9<br></code></pre></td></tr></table></figure></li><li><p>tcpdump 抓包，用来防止80端口被人攻击时可以分析数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tcpdump -c 10000 -i eth0 -n dst port 80 &gt; /root/pkts<br></code></pre></td></tr></table></figure></li></ol><p>38、然后检查IP的重复数并从小到大排序 注意 “-t\ +0”  中间是两个空格</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coq"># less pkts | <span class="hljs-type">awk</span> &#123;&#x27;printf $<span class="hljs-number">3</span><span class="hljs-string">&quot;\n&quot;</span>&#x27;&#125; | <span class="hljs-type">cut</span> -d. -f <span class="hljs-number">1</span><span class="hljs-number">-4</span> | <span class="hljs-type">sort</span> | <span class="hljs-type">uniq</span> -c | <span class="hljs-type">awk</span> &#123;&#x27;printf $<span class="hljs-number">1</span><span class="hljs-string">&quot; &quot;</span>$<span class="hljs-number">2</span><span class="hljs-string">&quot;\n&quot;</span>&#x27;&#125; | <span class="hljs-type">sort</span> -n -t\ +<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>39、查看有多少个活动的 php-cgi 进程</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coq">netstat -anp | <span class="hljs-type">grep</span> php-cgi | <span class="hljs-type">grep</span> ^tcp | <span class="hljs-type">wc</span> -l<br></code></pre></td></tr></table></figure><p>40、查看系统自启动的服务</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">chkconfig</span> --list | awk <span class="hljs-string">&#x27;&#123;if (<span class="hljs-variable">$5</span>==&quot;3:on&quot;) print <span class="hljs-variable">$1</span>&#125;&#x27;</span><br></code></pre></td></tr></table></figure><p>41、kudzu 查看网卡型号</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">kudzu --probe --<span class="hljs-keyword">class</span>=<span class="hljs-symbol">network</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
